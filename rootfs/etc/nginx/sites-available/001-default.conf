# Set https to 'on' if x-forwarded-proto is https
map $http_x_forwarded_proto $fcgi_https {
    default off;
    https on;
}

server {
    listen 80 default_server;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate ssl/server.crt;
    ssl_certificate_key ssl/server.key;

    access_log /dev/fd/1 main;
    error_log /dev/fd/2;

    server_name _;
    root /var/www/public;
    index index.php index.html index.htm;

    # HSTS Protection
    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-XSS-Protection "1; mode=block; report=/xss/report" always;
    add_header X-Content-Type-Options "nosniff" always;

    location ~ ^.*/(blank|inv)\.gif$ {
        expires 1w;
        empty_gif;
        recursive_error_pages off;
        error_page 404 = /index.php$is_args$args;
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ .*\.(eot|ttf|otf|woff|woff2)$ {
        add_header 'Access-Control-Allow-Origin' '*';
        expires 1w;
        recursive_error_pages off;
        error_page 404 = /index.php$is_args$args;
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ .*\.(jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|css)$ {
        expires 1w;
        recursive_error_pages off;
        error_page 404 = /index.php$is_args$args;
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ /.well-known {
        allow all;
    }

    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location / {
        recursive_error_pages off;
        error_page 404 = /index.php$is_args$args;
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php(/|$) {
        recursive_error_pages off;
        error_page 404 = /index.php$is_args$args;
        try_files $uri $uri/ /index.php$is_args$args;

        set $skip_cache 1;

        if ($http_x_disable_cache)  {
            set $skip_cache 1;
        }

        if  ($http_x_force_cache)   {
            set $skip_cache 0;
        }

	# Fastcgi cache settings
        fastcgi_cache php;
        fastcgi_cache_valid 200 1m;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $args $skip_cache;
        fastcgi_cache_purge $purge_method;

        # Fastcgi settings
        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param SERVER_NAME $host;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param HTTPS $fcgi_https;
        fastcgi_connect_timeout 60s;
        fastcgi_read_timeout 600s;

        fastcgi_pass 127.0.0.1:9000;

        #internal;

        add_header Via $hostname;
        add_header X-Cache-Status $upstream_cache_status;
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-XSS-Protection "1; mode=block; report=/xss/report" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    location /server-status {
        stub_status on;
        access_log   off;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 169.254.0.0/16;
        allow 127.0.0.1;
        deny all;
    }

    location ~ ^/(status|ping)$ {
        access_log off;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 169.254.0.0/16;
        allow 127.0.0.1;
        deny all;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_pass 127.0.0.1:9000;
    }
}
